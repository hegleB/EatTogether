plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id("de.mannodermaus.android-junit5") version "1.8.2.1"
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {

    compileSdkVersion 32

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'build.xml'
    }

    defaultConfig {
        applicationId "com.qure.presenation"
        minSdkVersion 24
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "YOUTUBE_API_KEY", properties['youtube_api_key']
        buildConfigField "String", "PLAYLIST_ID_KEY", properties['playlist_id_key']
        buildConfigField "String", "FACEBOOK_APP_ID", properties['facebook_app_id']
        buildConfigField "String", "FB_LOGIN_PROTOCOL_SCHEME", properties['fb_login_protocol_scheme']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint("com.pinterest:ktlint:0.48.1") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }

    implementation project(path:':domain')
    implementation project(path:':data')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.facebook.android:facebook-android-sdk:[8,9)'

    testImplementation (Testing.ASSERTJ)

    testImplementation (Testing.JUNIT_JUPITER_API)
    testRuntimeOnly (Testing.JUNIT_JUPITER_ENGINE)
    testImplementation (Testing.JUNIT_JUPITER_PARAMS)
    testRuntimeOnly (Testing.JUNIT_VINTAGE)

    androidTestImplementation (Testing.TEST_RULE)
    testImplementation (Testing.ARCH_CORE_TESTING)
    testImplementation (Testing.COROUTINES_TEST)

    testImplementation (Testing.MOCKK)
    androidTestImplementation (Testing.MOCKK_ANDROID)

    implementation platform(Firebase.FIREBASE_BOM)
    implementation (Firebase.FIREBASE_PLAY_SERVICES)
    implementation (Firebase.FIREBASE_AUTH)
    implementation (Firebase.FIREBASE)
    implementation (Firebase.FIREBASE_CONFIG)
    implementation (Firebase.FIREBASE_MESSAGING)
    implementation (Firebase.FIREBASE_STORAGE)

    implementation (NavComponent.NAVIGATION_FRAGMENT)
    implementation (NavComponent.NAVIGATION_UI)
    implementation (NavComponent.NAVIGATION_DYNAMIC_FEATURES_FRAGMENT)
    androidTestImplementation (NavComponent.NAVIGATION_TESTING)
    implementation (NavComponent.NAVIGATION_COMPOSE)

    implementation (AndroidX.LIFECYCLE_VIEW_MODEL)
    implementation (AndroidX.LIFECYCLE_LIVEDATA)
    implementation (AndroidX.LIFECYCLE_RUNTIME)

    implementation (Paging.PAGING_COMMON)
    implementation (Paging.PAGING_RUNTIME)

    implementation (Glide.GLIDE)
    implementation (Glide.GLIDE_COMPILER)
    implementation (Glide.GLIDE_BLUR)

    implementation (DaggerHilt.DAGGER_HILT)
    kapt (DaggerHilt.DAGGER_HILT_COMPILER)
    implementation (DaggerHilt.DAGGER_HILT_VIEW_MODEL)
    kapt (DaggerHilt.DAGGER_HILT_ANDROIDX_COMPILER)

    implementation (Coroutines.COROUTINES)
    implementation (Coroutines.COROUTINES_SERVICES)
    implementation (Coroutines.COROUTINES_ANDROID)

    implementation (SpinKit.SPINKIT)

    implementation (CircleImageView.CIRCLE)

    implementation (Ted.TED_PERMISSION)
    implementation (Ted.TED_BOTTOM_PICKER)

    implementation (RollingText.ROLLING_TEXT)

    implementation (Preference.PREFERENCE)

    implementation (Zxing.ZXING)

    implementation (ExoPlayer.EXOPLAYER_CORE)
    implementation (ExoPlayer.EXOPLAYER_DASH)
    implementation (ExoPlayer.EXOPLAYER_UI)

    implementation (YoutubeExtractor.YOUBUTE_EXTRACTOR)

    implementation (GoogleApi.YOUBUBE)
    implementation (GoogleApi.HTTP_CLIENT)
    implementation (GoogleApi.API_CLIENT)
    implementation (GoogleApi.API_CLIENT_GSON)

    implementation (Retrofit.RETROFIT)
    implementation (Retrofit.CONVERTER_GSON)
    implementation (Retrofit.CONVERTER_JAXB)

    implementation (OkHttp.OKHTTP)
    implementation (OkHttp.LOGGING_INTERCEPTOR)

    implementation (ReadMore.READMORE_TEXTVIEW)
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    mainClass.set("com.pinterest.ktlint.Main")
    args "src/**/*.kt"
    // see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    mainClass.set("com.pinterest.ktlint.Main")
    args "-F", "src/**/*.kt"
    // see https://pinterest.github.io/ktlint/install/cli/#command-line-usage for more information
}